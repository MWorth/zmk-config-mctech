/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&mt { flavor = "tap-preferred"; };

/ {
    macros {
        user: user {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp A &kp T &kp T &kp H &kp E &kp W &kp DOT &kp W &kp O &kp R &kp T &kp H>;
            label = "USER";
        };

        pw: pw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(A) &kp LS(Z) &kp A &kp Z &kp N0 &kp N9 &kp EXCL &kp EXCL>;
            label = "PW";
        };

        lock: lock {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>, <&kp LEFT_GUI &kp L>, <&macro_release>;

            label = "LOCK";
        };

        run: run {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LEFT_ALT &kp E>,
                <&macro_release>;

            label = "RUN";
        };

        login: login {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp A &kp T &kp T &kp H &kp E &kp W &kp DOT &kp W &kp O &kp R &kp T &kp H &kp TAB &kp LS(A) &kp LS(Z) &kp A &kp Z &kp N0 &kp N9 &kp EXCL &kp EXCL &kp ENTER>;
            label = "LOGIN";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "BASE";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB       &kp Q           &kp W           &kp E           &kp R             &kp T        &kp Y    &kp U              &kp I        &kp O            &kp P               &kp BSPC
&kp DELETE    &mt LEFT_GUI A  &mt LEFT_ALT S  &mt LCTRL D     &mt LEFT_SHIFT F  &kp G        &kp H    &mt RIGHT_SHIFT J  &mt RCTRL K  &mt RIGHT_ALT L  &mt RIGHT_GUI SEMI  &kp SQT
&kp LEFT_GUI  &kp Z           &kp X           &kp C           &kp V             &kp B        &kp N    &kp M              &kp COMMA    &kp DOT          &kp FSLH            &kp ESC
                                              &kp LEFT_SHIFT  &mo 1             &kp SPACE    &kp RET  &mo 2              &kp RCTRL
            >;
        };

        lower_layer {
            display-name = "LOW";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp PERCENT          &kp EXCL       &kp AT               &kp POUND        &kp LEFT_BRACE        &kp RIGHT_BRACE          &kp N7        &kp N8        &kp N9        &kp MINUS  &kp SLASH  &kp BSPC
&kp DOLLAR           &kp STAR       &kp AMPS             &kp HASH         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PLUS   &kp STAR   &kp TAB
&kp LS(NON_US_HASH)  &kp LS(MINUS)  &kp LS(NON_US_BSLH)  &kp NON_US_BSLH  &kp LEFT_BRACKET      &kp RIGHT_BRACKET        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans     &kp EQUAL  &kp KP_NUMLOCK
                                                         &kp LEFT_SHIFT   &trans                &kp SPACE                &kp RET       &trans        &kp N0
            >;
        };

        raise_layer {
            display-name = "HIGH";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB       &bt BT_PRV  &kp F4   &kp F3           &kp F2   &kp F1       &kp INSERT       &kp UP_ARROW    &kp DELETE       &kp PAGE_UP    &lock   &kp BSPC
&kp CAPSLOCK  &bt BT_NXT  &kp F8   &kp F7           &kp F6   &kp F5       &kp LEFT_ARROW   &kp DOWN        &kp RIGHT_ARROW  &kp PAGE_DOWN  &run    &kp TAB
&kp LEFT_GUI  &bt BT_CLR  &kp F12  &kp F11          &kp F10  &kp F9       &kp PRINTSCREEN  &kp SCROLLLOCK  &kp C_PAUSE      &trans         &login  &kp ESCAPE
                                   &kp RIGHT_SHIFT  &trans   &kp SPACE    &kp RET          &trans          &kp RCTRL
            >;
        };

        both_layer {
            bindings = <
&rgb_ug RGB_TOG  &trans           &trans           &trans           &trans           &trans             &kp C_VOL_DN  &kp K_MUTE        &kp C_VOL_UP  &trans  &trans  &trans
&rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &trans           &trans             &kp K_PREV    &kp K_PLAY_PAUSE  &kp K_NEXT    &trans  &trans  &trans
&rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_SPD  &rgb_ug RGB_SPI    &trans        &kp K_STOP        &trans        &trans  &trans  &trans
                                                   &trans           &trans           &trans             &trans        &trans            &trans
            >;

            label = "ALT";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
